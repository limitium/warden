version: '3'
services:
   cadvisor:
      image: thedavis/cadvisor-arm:latest
      ports:
        - '8080:8080'
      expose:
        - '8080'
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
   nginx:
      image: budry/jwilder-nginx-proxy-arm
      restart: always
      ports:
        - '80:80'
      depends_on:
        - warden
        - grafana_system
        - face
      volumes:
         - '/var/run/docker.sock:/tmp/docker.sock:ro'
   mqtt2prom:
     image: limitium/mqtt2prom
     restart: always
     ports:
      - '9344:9344'
     expose:
       - '9344'
     volumes:
       - ./mqtt2prom/provisioning:/usr/src/app/conf:ro
   # #   environment:
      #   VIRTUAL_HOST: mqtt2prom.${HOST}
   prometheus_system:
      image: 'prom/prometheus:latest'
      restart: always
      command:
         - '--config.file=/etc/prometheus/prometheus.yml'
         - '--storage.tsdb.path=/prometheus'
         - '--web.console.libraries=/etc/prometheus/console_libraries'
         - '--web.console.templates=/etc/prometheus/consoles'
         - '--storage.tsdb.retention.time=14d'
         - '--storage.tsdb.retention.size=5GB'
      ports:
         - '9191:9090'
      expose:
         - '9090'
      volumes: 
         - ./prometheus_system/provisioning:/etc/prometheus:ro
         - ./prometheus_system/data:/prometheus:rw
      # environment:
         # VIRTUAL_HOST: prom.${HOST}   
   prometheus_user:
      image: 'prom/prometheus:latest'
      restart: always
      command:
         - '--config.file=/etc/prometheus/prometheus.yml'
         - '--storage.tsdb.path=/prometheus'
         - '--web.console.libraries=/etc/prometheus/console_libraries'
         - '--web.console.templates=/etc/prometheus/consoles'
         - '--storage.tsdb.retention.time=100d'
         - '--storage.tsdb.retention.size=20GB'
      ports:
         - '9090:9090'
      expose:
         - '9090'
      volumes: 
        - ./prometheus_user/provisioning:/etc/prometheus:ro
        - ./prometheus_user/data:/prometheus:rw
      # environment:
         # VIRTUAL_HOST: prom.${HOST}
   face:
      image: 'limitium/bloomy-face:latest'
      restart: always
      entrypoint: hugo server --baseUrl=${HOST} --bind="0.0.0.0"
      ports:
         - '1313:1313'
      expose:
         - '1313'
      environment:
         VIRTUAL_HOST: ${HOST}
   warden:
      image: 'limitium/grafana-arm32v7-linux:latest'
      restart: always
      ports:
         - '3000:3000'
      expose:
         - '3000'
      volumes:
         - ./grafana_warden/provisioning:/etc/grafana/provisioning:ro
         - ./grafana_warden/data:/var/lib/grafana:rw
         - ./grafana_warden/grafana.ini:/etc/grafana/grafana.ini:ro
      environment:
         VIRTUAL_HOST: warden.${HOST}
         GF_SERVER_ROOT_URL: http://warden.${HOST}
         GF_RENDERING_SERVER_URL: http://renderer:8081/render
         GF_RENDERING_CALLBACK_URL: http://warden:3000/
         GF_LOG_FILTERS: rendering:info
         GF_TELEGRAM_BOT_TOKEN: ${GF_TELEGRAM_BOT_TOKEN}
   grafana_system:
      image: 'grafana/grafana:latest'
      restart: always
      ports:
         - '3001:3000'
      expose:
         - '3000'
      volumes:
         - ./grafana_system/provisioning:/etc/grafana/provisioning:ro
         - ./grafana_system/data:/var/lib/grafana:rw
         - ./grafana_system/grafana.ini:/etc/grafana/grafana.ini:ro
      environment:
         VIRTUAL_HOST: grafana.${HOST}
         GF_SERVER_ROOT_URL: http://grafana_system.${HOST}
         GF_RENDERING_SERVER_URL: http://renderer:8081/render
         GF_RENDERING_CALLBACK_URL: http://grafana_system:3000/
         GF_LOG_FILTERS: rendering:warn
         GF_TELEGRAM_BOT_TOKEN: ${GF_TELEGRAM_BOT_TOKEN}
   renderer:
      image: adejong/grafana-image-renderer-pi:1.0.8-beta2
      restart: always
      expose: 
         - '8081'
      environment:
         ENABLE_METRICS: 'true'
         LOG_LEVEL: 'warn'
   chat_identifier:
      image: falafel/wardenbotjs
      environment: 
         BOT_TOKEN: ${GF_TELEGRAM_BOT_TOKEN}
   smtp:
      image: ixdotai/smtp:latest
      expose:
         - '25'
      environment:
         MAILNAME: ${HOST}