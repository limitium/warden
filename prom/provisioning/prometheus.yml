# my global config
global:
  scrape_interval:     5s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 5s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "first_rules.yml"
# - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'from_mqtt2prom'
    metrics_path: '/'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
      - targets: ['mqtt2prom:9344']
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'from_grafana'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
      - targets: ['graf:3000']
  - job_name: 'from_renderer'
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.
    static_configs:
      - targets: ['renderer:8081']
  - job_name: cadvisor
    scrape_interval: 5s
    static_configs:
      - targets: ['cadvisor:8080']
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  # - job_name: 'hive2prom'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    # static_configs:
      # - targets: ['gatekeeper-hive2prom.westeurope.azurecontainer.io:8002']
    # If honor_labels is set to "true", label conflicts are resolved by keeping label
    # values from the scraped data and ignoring the conflicting server-side labels.
    honor_labels: true